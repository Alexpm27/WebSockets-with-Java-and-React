{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexg\\\\chatWebSocketsEjem\\\\ChatApplication\\\\react-client\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { HiOutlineCamera } from \"react-icons/hi2\";\nimport { BiSend } from \"react-icons/bi\";\nimport { over } from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nconst ChatRoom = () => {\n  _s();\n\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const inputFile = useRef(null);\n  var usersConections = [];\n  const [userData, setUserData] = useState({\n    username: \"\",\n    receivername: \"\",\n    connected: false,\n    message: \"\",\n    file: \"\"\n  });\n  useEffect(() => {\n    console.log(userData);\n  }, [userData]);\n\n  const connect = () => {\n    let Sock = new SockJS(\"http://localhost:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    stompClient.subscribe(\"/chatroom/public\", onMessageReceived);\n    stompClient.subscribe(\"/user/\" + userData.username + \"/private\", onPrivateMessage);\n    userJoin();\n  };\n\n  const findUserName = () => {\n    usersConections = privateChats.keys();\n\n    for (const key of usersConections) {\n      if (key == userData.username) {\n        setUserData({ ...userData,\n          connected: false\n        });\n        alert(\"User already exist: try again \");\n        break;\n      }\n\n      console.log(key);\n    }\n  };\n\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  };\n\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          if (payloadData.senderName != userData.username) {\n            privateChats.set(payloadData.senderName, []);\n            setPrivateChats(new Map(privateChats));\n          }\n\n          userJoin();\n        }\n\n        break;\n\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n\n  const onPrivateMessage = payload => {\n    console.log(payload);\n    var payloadData = JSON.parse(payload.body);\n\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      let list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      message: value\n    });\n  };\n\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        file: userData.file,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        message: \"\",\n        file: \"\"\n      });\n      inputFile.current.value = null;\n    }\n  };\n\n  const handleFile = event => {\n    var files = event.target.files;\n    Array.from(files).forEach(files => {\n      var reader = new FileReader();\n      reader.readAsDataURL(files);\n\n      reader.onload = function () {\n        var fileConverted = reader.result.split(\",\");\n        console.log(fileConverted);\n        setUserData({ ...userData,\n          file: fileConverted[1]\n        });\n      };\n    });\n  };\n\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        file: userData.file,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        message: \"\",\n        file: \"\"\n      });\n      inputFile.current.value = null;\n    }\n  };\n\n  const handleUsername = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      username: value\n    });\n  };\n\n  const registerUser = () => {\n    connect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(\"CHATROOM\");\n            },\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: userData.username !== name && /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                setTab(name);\n              },\n              className: `member ${tab === name && \"active\"}`,\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.file !== \"\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/jpeg;base64,${chat.file}`,\n                width: \"100vh\",\n                height: \"100vh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 25\n              }, this) : chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: \"me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"inputfile\",\n            ref: inputFile,\n            onChange: handleFile,\n            id: \"buttonFile\",\n            accept: \"image/*\",\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"buttonFile\",\n            children: /*#__PURE__*/_jsxDEV(HiOutlineCamera, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: /*#__PURE__*/_jsxDEV(BiSend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.file !== \"\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/jpeg;base64,${chat.file}`,\n                width: \"100vh\",\n                height: \"100vh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 25\n              }, this) : chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: \"me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"inputfile\",\n            ref: inputFile,\n            onChange: handleFile,\n            id: \"buttonFile\",\n            accept: \"image/*\",\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"buttonFile\",\n            children: /*#__PURE__*/_jsxDEV(HiOutlineCamera, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: /*#__PURE__*/_jsxDEV(BiSend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Enter your name\",\n        name: \"userName\",\n        value: userData.username,\n        onChange: handleUsername,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatRoom, \"/o5asPrv75ZtlUptoy3ahBPGF/k=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/alexg/chatWebSocketsEjem/ChatApplication/react-client/src/components/ChatRoom.js"],"names":["React","useEffect","useState","useRef","HiOutlineCamera","BiSend","over","SockJS","stompClient","ChatRoom","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","inputFile","usersConections","userData","setUserData","username","receivername","connected","message","file","console","log","connect","Sock","onConnected","onError","subscribe","onMessageReceived","onPrivateMessage","userJoin","findUserName","keys","key","alert","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","get","set","push","list","err","handleMessage","event","value","target","sendValue","current","handleFile","files","Array","from","forEach","reader","FileReader","readAsDataURL","onload","fileConverted","result","split","sendPrivateValue","receiverName","handleUsername","registerUser","map","name","index","chat","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,IAAIC,WAAW,GAAG,IAAlB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAIU,GAAJ,EAAD,CAAhD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,UAAD,CAA9B;AACA,QAAMe,SAAS,GAAGd,MAAM,CAAC,IAAD,CAAxB;AACA,MAAIe,eAAe,GAAG,EAAtB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AAEvCmB,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,YAAY,EAAE,EAHyB;AAIvCC,IAAAA,SAAS,EAAE,KAJ4B;AAKvCC,IAAAA,OAAO,EAAE,EAL8B;AAMvCC,IAAAA,IAAI,EAAE;AANiC,GAAD,CAAxC;AAQAxB,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMS,OAAO,GAAG,MAAM;AACpB,QAAIC,IAAI,GAAG,IAAItB,MAAJ,CAAW,0BAAX,CAAX;AACAC,IAAAA,WAAW,GAAGF,IAAI,CAACuB,IAAD,CAAlB;AACArB,IAAAA,WAAW,CAACoB,OAAZ,CAAoB,EAApB,EAAwBE,WAAxB,EAAqCC,OAArC;AACD,GAJD;;AAMA,QAAMD,WAAW,GAAG,MAAM;AACxBtB,IAAAA,WAAW,CAACwB,SAAZ,CAAsB,kBAAtB,EAA0CC,iBAA1C;AACAzB,IAAAA,WAAW,CAACwB,SAAZ,CACE,WAAWb,QAAQ,CAACE,QAApB,GAA+B,UADjC,EAEEa,gBAFF;AAIAC,IAAAA,QAAQ;AACT,GAPD;;AAUA,QAAMC,YAAY,GAAG,MAAM;AACzBlB,IAAAA,eAAe,GAAGR,YAAY,CAAC2B,IAAb,EAAlB;;AAEA,SAAK,MAAMC,GAAX,IAAkBpB,eAAlB,EAAmC;AACjC,UAAIoB,GAAG,IAAInB,QAAQ,CAACE,QAApB,EAA6B;AAC3BD,QAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeI,UAAAA,SAAS,EAAE;AAA1B,SAAD,CAAX;AACAgB,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACA;AACD;;AAEDb,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACD;AAEF,GAbD;;AAeA,QAAMH,QAAQ,GAAG,MAAM;AACrB,QAAIK,WAAW,GAAG;AAChBC,MAAAA,UAAU,EAAEtB,QAAQ,CAACE,QADL;AAEhBqB,MAAAA,MAAM,EAAE;AAFQ,KAAlB;AAIAlC,IAAAA,WAAW,CAACmC,IAAZ,CAAiB,cAAjB,EAAiC,EAAjC,EAAqCC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAArC;AACD,GAND;;AAQA,QAAMP,iBAAiB,GAAIa,OAAD,IAAa;AACrC,QAAIC,WAAW,GAAGH,IAAI,CAACI,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAAlB;;AACA,YAAQF,WAAW,CAACL,MAApB;AACE,WAAK,MAAL;AAEI,YAAI,CAAChC,YAAY,CAACwC,GAAb,CAAiBH,WAAW,CAACN,UAA7B,CAAL,EAA+C;AAE/C,cAAIM,WAAW,CAACN,UAAZ,IAA0BtB,QAAQ,CAACE,QAAvC,EAAgD;AAEhDX,YAAAA,YAAY,CAACyC,GAAb,CAAiBJ,WAAW,CAACN,UAA7B,EAAyC,EAAzC;AACA9B,YAAAA,eAAe,CAAC,IAAIC,GAAJ,CAAQF,YAAR,CAAD,CAAf;AAGC;;AACDyB,UAAAA,QAAQ;AAGT;;AACD;;AACF,WAAK,SAAL;AACEtB,QAAAA,WAAW,CAACuC,IAAZ,CAAiBL,WAAjB;AACAjC,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,CAAD,CAAd;AACA;AApBJ;AAsBD,GAxBD;;AA0BA,QAAMqB,gBAAgB,GAAIY,OAAD,IAAa;AACpCpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,OAAZ;AACA,QAAIC,WAAW,GAAGH,IAAI,CAACI,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAAlB;;AACA,QAAIvC,YAAY,CAACwC,GAAb,CAAiBH,WAAW,CAACN,UAA7B,CAAJ,EAA8C;AAC5C/B,MAAAA,YAAY,CAACwC,GAAb,CAAiBH,WAAW,CAACN,UAA7B,EAAyCW,IAAzC,CAA8CL,WAA9C;AACApC,MAAAA,eAAe,CAAC,IAAIC,GAAJ,CAAQF,YAAR,CAAD,CAAf;AACD,KAHD,MAGO;AACL,UAAI2C,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,CAACD,IAAL,CAAUL,WAAV;AACArC,MAAAA,YAAY,CAACyC,GAAb,CAAiBJ,WAAW,CAACN,UAA7B,EAAyCY,IAAzC;AACA1C,MAAAA,eAAe,CAAC,IAAIC,GAAJ,CAAQF,YAAR,CAAD,CAAf;AACD;AACF,GAZD;;AAcA,QAAMqB,OAAO,GAAIuB,GAAD,IAAS;AACvB5B,IAAAA,OAAO,CAACC,GAAR,CAAY2B,GAAZ;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AACAtC,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,MAAAA,OAAO,EAAEiC;AAAxB,KAAD,CAAX;AACD,GAHD;;AAIA,QAAME,SAAS,GAAG,MAAM;AACtB,QAAInD,WAAJ,EAAiB;AACf,UAAIgC,WAAW,GAAG;AAChBC,QAAAA,UAAU,EAAEtB,QAAQ,CAACE,QADL;AAEhBG,QAAAA,OAAO,EAAEL,QAAQ,CAACK,OAFF;AAGhBC,QAAAA,IAAI,EAAEN,QAAQ,CAACM,IAHC;AAIhBiB,QAAAA,MAAM,EAAE;AAJQ,OAAlB;AAMAhB,MAAAA,OAAO,CAACC,GAAR,CAAYa,WAAZ;AACAhC,MAAAA,WAAW,CAACmC,IAAZ,CAAiB,cAAjB,EAAiC,EAAjC,EAAqCC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAArC;AACApB,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,QAAAA,OAAO,EAAE,EAAxB;AAA4BC,QAAAA,IAAI,EAAE;AAAlC,OAAD,CAAX;AACAR,MAAAA,SAAS,CAAC2C,OAAV,CAAkBH,KAAlB,GAA0B,IAA1B;AACD;AACF,GAbD;;AAeA,QAAMI,UAAU,GAAIL,KAAD,IAAW;AAC5B,QAAIM,KAAK,GAAGN,KAAK,CAACE,MAAN,CAAaI,KAAzB;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAWF,KAAX,EAAkBG,OAAlB,CAA2BH,KAAD,IAAW;AACnC,UAAII,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBN,KAArB;;AACAI,MAAAA,MAAM,CAACG,MAAP,GAAgB,YAAY;AAC1B,YAAIC,aAAa,GAAGJ,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoB,GAApB,CAApB;AACA9C,QAAAA,OAAO,CAACC,GAAR,CAAY2C,aAAZ;AACAlD,QAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeM,UAAAA,IAAI,EAAE6C,aAAa,CAAC,CAAD;AAAlC,SAAD,CAAX;AACD,OAJD;AAKD,KARD;AASD,GAXD;;AAaA,QAAMG,gBAAgB,GAAG,MAAM;AAC7B,QAAIjE,WAAJ,EAAiB;AACf,UAAIgC,WAAW,GAAG;AAChBC,QAAAA,UAAU,EAAEtB,QAAQ,CAACE,QADL;AAEhBqD,QAAAA,YAAY,EAAE3D,GAFE;AAGhBU,QAAAA,IAAI,EAAEN,QAAQ,CAACM,IAHC;AAIhBD,QAAAA,OAAO,EAAEL,QAAQ,CAACK,OAJF;AAKhBkB,QAAAA,MAAM,EAAE;AALQ,OAAlB;;AAQA,UAAIvB,QAAQ,CAACE,QAAT,KAAsBN,GAA1B,EAA+B;AAC7BL,QAAAA,YAAY,CAACwC,GAAb,CAAiBnC,GAAjB,EAAsBqC,IAAtB,CAA2BZ,WAA3B;AACA7B,QAAAA,eAAe,CAAC,IAAIC,GAAJ,CAAQF,YAAR,CAAD,CAAf;AACD;;AACDF,MAAAA,WAAW,CAACmC,IAAZ,CAAiB,sBAAjB,EAAyC,EAAzC,EAA6CC,IAAI,CAACC,SAAL,CAAeL,WAAf,CAA7C;AACApB,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,QAAAA,OAAO,EAAE,EAAxB;AAA4BC,QAAAA,IAAI,EAAE;AAAlC,OAAD,CAAX;AACAR,MAAAA,SAAS,CAAC2C,OAAV,CAAkBH,KAAlB,GAA0B,IAA1B;AACD;AACF,GAlBD;;AAoBA,QAAMkB,cAAc,GAAInB,KAAD,IAAW;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AACAtC,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,QAAQ,EAAEoC;AAAzB,KAAD,CAAX;AACD,GAHD;;AAKA,QAAMmB,YAAY,GAAG,MAAM;AACzBhD,IAAAA,OAAO;AACR,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGT,QAAQ,CAACI,SAAT,gBACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAA,kCACE;AACE,YAAA,OAAO,EAAE,MAAM;AACbP,cAAAA,MAAM,CAAC,UAAD,CAAN;AACD,aAHH;AAIE,YAAA,SAAS,EAAG,UAASD,GAAG,KAAK,UAAR,IAAsB,QAAS,EAJtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EASG,CAAC,GAAGL,YAAY,CAAC2B,IAAb,EAAJ,EAAyBwC,GAAzB,CAA6B,CAACC,IAAD,EAAOC,KAAP,kBAC5B;AAAA,sBACG5D,QAAQ,CAACE,QAAT,KAAsByD,IAAtB,iBACC;AACE,cAAA,OAAO,EAAE,MAAM;AACb9D,gBAAAA,MAAM,CAAC8D,IAAD,CAAN;AACD,eAHH;AAIE,cAAA,SAAS,EAAG,UAAS/D,GAAG,KAAK+D,IAAR,IAAgB,QAAS,EAJhD;AAAA,wBAOGA;AAPH,eAKOC,KALP;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EA4BGhE,GAAG,KAAK,UAAR,iBACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBACGF,WAAW,CAACgE,GAAZ,CAAgB,CAACG,IAAD,EAAOD,KAAP,kBACf;AACE,YAAA,SAAS,EAAG,WACVC,IAAI,CAACvC,UAAL,KAAoBtB,QAAQ,CAACE,QAA7B,IAAyC,MAC1C,EAHH;AAAA,uBAMG2D,IAAI,CAACvC,UAAL,KAAoBtB,QAAQ,CAACE,QAA7B,iBACC;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,wBAAyB2D,IAAI,CAACvC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAPJ,eASE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,wBACGuC,IAAI,CAACvD,IAAL,KAAc,EAAd,gBACC;AACE,gBAAA,GAAG,EAAG,0BAAyBuD,IAAI,CAACvD,IAAK,EAD3C;AAEE,gBAAA,KAAK,EAAC,OAFR;AAGE,gBAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,sBADD,GAOCuD,IAAI,CAACxD;AART;AAAA;AAAA;AAAA;AAAA,oBATF,EAqBGwD,IAAI,CAACvC,UAAL,KAAoBtB,QAAQ,CAACE,QAA7B,iBACC;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBJ;AAAA,aAIO0D,KAJP;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eA+BE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,eAFZ;AAGE,YAAA,WAAW,EAAC,mBAHd;AAIE,YAAA,KAAK,EAAE5D,QAAQ,CAACK,OAJlB;AAKE,YAAA,QAAQ,EAAE+B;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,WAFZ;AAGE,YAAA,GAAG,EAAEtC,SAHP;AAIE,YAAA,QAAQ,EAAE4C,UAJZ;AAKE,YAAA,EAAE,EAAC,YALL;AAME,YAAA,MAAM,EAAC,SANT;AAOE,YAAA,KAAK,EAAE;AAAEoB,cAAAA,OAAO,EAAE;AAAX;AAPT;AAAA;AAAA;AAAA;AAAA,kBARF,eAiBE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA,mCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAoBE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,aAFZ;AAGE,YAAA,OAAO,EAAEtB,SAHX;AAAA,mCAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ,EA0FG5C,GAAG,KAAK,UAAR,iBACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBACG,CAAC,GAAGL,YAAY,CAACwC,GAAb,CAAiBnC,GAAjB,CAAJ,EAA2B8D,GAA3B,CAA+B,CAACG,IAAD,EAAOD,KAAP,kBAC9B;AACE,YAAA,SAAS,EAAG,WACVC,IAAI,CAACvC,UAAL,KAAoBtB,QAAQ,CAACE,QAA7B,IAAyC,MAC1C,EAHH;AAAA,uBAMG2D,IAAI,CAACvC,UAAL,KAAoBtB,QAAQ,CAACE,QAA7B,iBACC;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,wBAAyB2D,IAAI,CAACvC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAPJ,eASE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,wBACCuC,IAAI,CAACvD,IAAL,KAAc,EAAd,gBACG;AACE,gBAAA,GAAG,EAAG,0BAAyBuD,IAAI,CAACvD,IAAK,EAD3C;AAEE,gBAAA,KAAK,EAAC,OAFR;AAGE,gBAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,sBADH,GAOGuD,IAAI,CAACxD;AART;AAAA;AAAA;AAAA;AAAA,oBATF,EAoBGwD,IAAI,CAACvC,UAAL,KAAoBtB,QAAQ,CAACE,QAA7B,iBACC;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ;AAAA,aAIO0D,KAJP;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eA8BE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,eAFZ;AAGE,YAAA,WAAW,EAAC,mBAHd;AAIE,YAAA,KAAK,EAAE5D,QAAQ,CAACK,OAJlB;AAKE,YAAA,QAAQ,EAAE+B;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,WAFZ;AAGE,YAAA,GAAG,EAAEtC,SAHP;AAIE,YAAA,QAAQ,EAAE4C,UAJZ;AAKE,YAAA,EAAE,EAAC,YALL;AAME,YAAA,MAAM,EAAC,SANT;AAOE,YAAA,KAAK,EAAE;AAAEoB,cAAAA,OAAO,EAAE;AAAX;AAPT;AAAA;AAAA;AAAA;AAAA,kBARF,eAiBE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA,mCACI,QAAE,eAAF;AAAkB,cAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAoBE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,aAFZ;AAGE,YAAA,OAAO,EAAER,gBAHX;AAAA,mCAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3FJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBA0JC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,WADL;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAEtD,QAAQ,CAACE,QAJlB;AAKE,QAAA,QAAQ,EAAEsD,cALZ;AAME,QAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AA3JJ;AAAA;AAAA;AAAA;AAAA,UADF;AA4KD,CA7UD;;GAAMnE,Q;;KAAAA,Q;AA+UN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { HiOutlineCamera } from \"react-icons/hi2\";\r\n\r\nimport { BiSend } from \"react-icons/bi\";\r\nimport { over } from \"stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\n\r\nvar stompClient = null;\r\nconst ChatRoom = () => {\r\n  const [privateChats, setPrivateChats] = useState(new Map());\r\n  const [publicChats, setPublicChats] = useState([]);\r\n  const [tab, setTab] = useState(\"CHATROOM\");\r\n  const inputFile = useRef(null);\r\n  var usersConections = [];\r\n  const [userData, setUserData] = useState({\r\n\r\n    username: \"\",\r\n    receivername: \"\",\r\n    connected: false,\r\n    message: \"\",\r\n    file: \"\",\r\n  });\r\n  useEffect(() => {\r\n    console.log(userData);\r\n  }, [userData]);\r\n\r\n  const connect = () => {\r\n    let Sock = new SockJS(\"http://localhost:8080/ws\");\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n\r\n  const onConnected = () => {\r\n    stompClient.subscribe(\"/chatroom/public\", onMessageReceived);\r\n    stompClient.subscribe(\r\n      \"/user/\" + userData.username + \"/private\",\r\n      onPrivateMessage\r\n    );\r\n    userJoin();\r\n  };\r\n\r\n\r\n  const findUserName = () => {\r\n    usersConections = privateChats.keys();\r\n\r\n    for (const key of usersConections) {\r\n      if (key == userData.username){\r\n        setUserData({ ...userData, connected: false });\r\n        alert(\"User already exist: try again \")\r\n        break\r\n      }\r\n      \r\n      console.log(key);\r\n    }\r\n   \r\n  };\r\n\r\n  const userJoin = () => {\r\n    var chatMessage = {\r\n      senderName: userData.username,\r\n      status: \"JOIN\",\r\n    };\r\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n  };\r\n\r\n  const onMessageReceived = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    switch (payloadData.status) {\r\n      case \"JOIN\":\r\n  \r\n          if (!privateChats.get(payloadData.senderName)) {\r\n          \r\n          if (payloadData.senderName != userData.username){\r\n\r\n          privateChats.set(payloadData.senderName, []);\r\n          setPrivateChats(new Map(privateChats));\r\n          \r\n          \r\n          }\r\n          userJoin();\r\n          \r\n          \r\n        }\r\n        break;\r\n      case \"MESSAGE\":\r\n        publicChats.push(payloadData);\r\n        setPublicChats([...publicChats]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onPrivateMessage = (payload) => {\r\n    console.log(payload);\r\n    var payloadData = JSON.parse(payload.body);\r\n    if (privateChats.get(payloadData.senderName)) {\r\n      privateChats.get(payloadData.senderName).push(payloadData);\r\n      setPrivateChats(new Map(privateChats));\r\n    } else {\r\n      let list = [];\r\n      list.push(payloadData);\r\n      privateChats.set(payloadData.senderName, list);\r\n      setPrivateChats(new Map(privateChats));\r\n    }\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const handleMessage = (event) => {\r\n    const { value } = event.target;\r\n    setUserData({ ...userData, message: value });\r\n  };\r\n  const sendValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        message: userData.message,\r\n        file: userData.file,\r\n        status: \"MESSAGE\",\r\n      };\r\n      console.log(chatMessage);\r\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: \"\", file: \"\" });\r\n      inputFile.current.value = null;\r\n    }\r\n  };\r\n\r\n  const handleFile = (event) => {\r\n    var files = event.target.files;\r\n    Array.from(files).forEach((files) => {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(files);\r\n      reader.onload = function () {\r\n        var fileConverted = reader.result.split(\",\");\r\n        console.log(fileConverted);\r\n        setUserData({ ...userData, file: fileConverted[1] });\r\n      };\r\n    });\r\n  };\r\n\r\n  const sendPrivateValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        receiverName: tab,\r\n        file: userData.file,\r\n        message: userData.message,\r\n        status: \"MESSAGE\",\r\n      };\r\n\r\n      if (userData.username !== tab) {\r\n        privateChats.get(tab).push(chatMessage);\r\n        setPrivateChats(new Map(privateChats));\r\n      }\r\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: \"\", file: \"\"});\r\n      inputFile.current.value = null;\r\n    }\r\n  };\r\n\r\n  const handleUsername = (event) => {\r\n    const { value } = event.target;\r\n    setUserData({ ...userData, username: value });\r\n  };\r\n\r\n  const registerUser = () => {\r\n    connect();\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li\r\n                onClick={() => {\r\n                  setTab(\"CHATROOM\");\r\n                }}\r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                Group\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <div>\r\n                  {userData.username !== name && (\r\n                    <li\r\n                      onClick={() => {\r\n                        setTab(name);\r\n                      }}\r\n                      className={`member ${tab === name && \"active\"}`}\r\n                      key={index}\r\n                    >\r\n                      {name}\r\n                    </li>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {publicChats.map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && \"self\"\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">\r\n                      {chat.file !== \"\" ? (\r\n                        <img\r\n                          src={`data:image/jpeg;base64,${chat.file}`}\r\n                          width=\"100vh\"\r\n                          height=\"100vh\"\r\n                        ></img>\r\n                      ) : (\r\n                        chat.message\r\n                      )}\r\n                    </div>\r\n\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">me</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"inputfile\"\r\n                  ref={inputFile}\r\n                  onChange={handleFile}\r\n                  id=\"buttonFile\"\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                />\r\n                <label htmlFor=\"buttonFile\">\r\n                    <HiOutlineCamera />\r\n                </label>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendValue}\r\n                >\r\n                  <BiSend />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab !== \"CHATROOM\" && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {[...privateChats.get(tab)].map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && \"self\"\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">\r\n                    {chat.file !== \"\" ? (\r\n                        <img\r\n                          src={`data:image/jpeg;base64,${chat.file}`}\r\n                          width=\"100vh\"\r\n                          height=\"100vh\"\r\n                        ></img>\r\n                      ) : (\r\n                        chat.message\r\n                      )}\r\n                    </div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">me</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"inputfile\"\r\n                  ref={inputFile}\r\n                  onChange={handleFile}\r\n                  id=\"buttonFile\"\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                />\r\n                <label htmlFor=\"buttonFile\">\r\n                    < HiOutlineCamera color=\"white\"/>\r\n                </label>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendPrivateValue}\r\n                >\r\n                  <BiSend/>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"register\">\r\n          <input\r\n            id=\"user-name\"\r\n            placeholder=\"Enter your name\"\r\n            name=\"userName\"\r\n            value={userData.username}\r\n            onChange={handleUsername}\r\n            margin=\"normal\"\r\n          />\r\n          <button type=\"button\" onClick={registerUser}>\r\n            connect\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"]},"metadata":{},"sourceType":"module"}