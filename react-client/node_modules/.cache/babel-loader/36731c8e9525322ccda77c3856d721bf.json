{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexg\\\\chatWebSocketsEjem\\\\ChatApplication\\\\react-client\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { over } from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nconst ChatRoom = () => {\n  _s();\n\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: \"\",\n    receivername: \"\",\n    connected: false,\n    message: \"\"\n  });\n  useEffect(() => {\n    console.log(userData);\n  }, [userData]);\n\n  const connect = () => {\n    let Sock = new SockJS(\"http://localhost:8080/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    setUserData({ ...userData,\n      connected: true\n    });\n    stompClient.subscribe(\"/chatroom/public\", onMessageReceived);\n    stompClient.subscribe(\"/user/\" + userData.username + \"/private\", onPrivateMessage);\n    userJoin();\n  };\n\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  };\n\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n        }\n\n        break;\n\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n\n  const onPrivateMessage = payload => {\n    console.log(payload);\n    var payloadData = JSON.parse(payload.body);\n\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      let list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n\n  const onError = err => {\n    +console.log(err);\n  };\n\n  const handleMessage = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      message: value\n    });\n  };\n\n  const sendValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        message: \"\"\n      });\n    }\n  };\n\n  const handleFile = event => {\n    const {\n      value\n    } = event.target.files;\n    Array.from(value).forEach(files => {\n      var reader = new FileReader();\n      reader.readAsDataURL(files);\n\n      reader.onload = function () {\n        var fileConverted = reader.result;\n      };\n    });\n    setUserData({ ...userData,\n      message: value\n    });\n  };\n\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        message: \"\"\n      });\n    }\n  };\n\n  const handleUsername = event => {\n    const {\n      value\n    } = event.target;\n    setUserData({ ...userData,\n      username: value\n    });\n  };\n\n  const registerUser = () => {\n    connect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(\"CHATROOM\");\n            },\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n            },\n            className: `member ${tab === name && \"active\"}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"input-file\",\n            onChange: sendValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Enter your name\",\n        name: \"userName\",\n        value: userData.username,\n        onChange: handleUsername,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatRoom, \"SQw75vaEGj7vg7iQ1onFUMgKaBI=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/alexg/chatWebSocketsEjem/ChatApplication/react-client/src/components/ChatRoom.js"],"names":["React","useEffect","useState","over","SockJS","stompClient","ChatRoom","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","userData","setUserData","username","receivername","connected","message","console","log","connect","Sock","onConnected","onError","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","senderName","status","send","JSON","stringify","payload","payloadData","parse","body","get","set","push","list","err","handleMessage","event","value","target","sendValue","handleFile","files","Array","from","forEach","reader","FileReader","readAsDataURL","onload","fileConverted","result","sendPrivateValue","receiverName","handleUsername","registerUser","keys","map","name","index","chat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { over } from \"stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\n\r\nvar stompClient = null;\r\nconst ChatRoom = () => {\r\n  const [privateChats, setPrivateChats] = useState(new Map());\r\n  const [publicChats, setPublicChats] = useState([]);\r\n  const [tab, setTab] = useState(\"CHATROOM\");\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    receivername: \"\",\r\n    connected: false,\r\n    message: \"\",\r\n  });\r\n  useEffect(() => {\r\n    console.log(userData);\r\n  }, [userData]);\r\n\r\n  const connect = () => {\r\n    let Sock = new SockJS(\"http://localhost:8080/ws\");\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n\r\n  const onConnected = () => {\r\n    setUserData({ ...userData, connected: true });\r\n    stompClient.subscribe(\"/chatroom/public\", onMessageReceived);\r\n    stompClient.subscribe(\r\n      \"/user/\" + userData.username + \"/private\",\r\n      onPrivateMessage\r\n    );\r\n    userJoin();\r\n  };\r\n\r\n  const userJoin = () => {\r\n    var chatMessage = {\r\n      senderName: userData.username,\r\n      status: \"JOIN\",\r\n    };\r\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n  };\r\n\r\n  const onMessageReceived = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    switch (payloadData.status) {\r\n      case \"JOIN\":\r\n        if (!privateChats.get(payloadData.senderName)) {\r\n          privateChats.set(payloadData.senderName, []);\r\n          setPrivateChats(new Map(privateChats));\r\n        }\r\n        break;\r\n      case \"MESSAGE\":\r\n        publicChats.push(payloadData);\r\n        setPublicChats([...publicChats]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onPrivateMessage = (payload) => {\r\n    console.log(payload);\r\n    var payloadData = JSON.parse(payload.body);\r\n    if (privateChats.get(payloadData.senderName)) {\r\n      privateChats.get(payloadData.senderName).push(payloadData);\r\n      setPrivateChats(new Map(privateChats));\r\n    } else {\r\n      let list = [];\r\n      list.push(payloadData);\r\n      privateChats.set(payloadData.senderName, list);\r\n      setPrivateChats(new Map(privateChats));\r\n    }\r\n  };\r\n\r\n  const onError = (err) => {\r\n    +console.log(err);\r\n  };\r\n\r\n  const handleMessage = (event) => {\r\n    const { value } = event.target;\r\n    setUserData({ ...userData, message: value });\r\n  };\r\n  const sendValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        message: userData.message,\r\n        status: \"MESSAGE\",\r\n      };\r\n      console.log(chatMessage);\r\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: \"\" });\r\n    }\r\n  };\r\n\r\n  const handleFile = (event) => {\r\n\r\n    const { value } = event.target.files;\r\n    Array.from(value).forEach(files => {\r\n\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(files);\r\n      reader.onload = function(){\r\n        var fileConverted = reader.result\r\n      }\r\n\r\n    })  \r\n\r\n    setUserData({ ...userData, message: value });\r\n  };\r\n\r\n\r\n  const sendPrivateValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        receiverName: tab,\r\n        message: userData.message,\r\n        status: \"MESSAGE\",\r\n      };\r\n\r\n      if (userData.username !== tab) {\r\n        privateChats.get(tab).push(chatMessage);\r\n        setPrivateChats(new Map(privateChats));\r\n      }\r\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: \"\" });\r\n    }\r\n  };\r\n\r\n  const handleUsername = (event) => {\r\n    const { value } = event.target;\r\n    setUserData({ ...userData, username: value });\r\n  };\r\n\r\n  const registerUser = () => {\r\n    connect();\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li\r\n                onClick={() => {\r\n                  setTab(\"CHATROOM\");\r\n                }}\r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                Group\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li\r\n                  onClick={() => {\r\n                    setTab(name);\r\n                  }}\r\n                  className={`member ${tab === name && \"active\"}`}\r\n                  key={index}\r\n                >\r\n                  {name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {publicChats.map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && \"self\"\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <input type=\"file\" \r\n                className=\"input-file\"\r\n                onChange={sendValue}/>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab !== \"CHATROOM\" && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {[...privateChats.get(tab)].map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && \"self\"\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  onChange={handleMessage}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button\"\r\n                  onClick={sendPrivateValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"register\">\r\n          <input\r\n            id=\"user-name\"\r\n            placeholder=\"Enter your name\"\r\n            name=\"userName\"\r\n            value={userData.username}\r\n            onChange={handleUsername}\r\n            margin=\"normal\"\r\n          />\r\n          <button type=\"button\" onClick={registerUser}>\r\n            connect\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"]},"metadata":{},"sourceType":"module"}